
package com.ftp;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.InputStream;
import org.apache.log4j.Logger;
import org.apache.commons.io.FileUtils;
import org.junit.After;
import org.junit.Test;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.integration.Message;
import org.springframework.integration.MessageChannel;
import org.springframework.integration.support.MessageBuilder;


public class FtpOutboundChannelAdapterSample {

	private static final Logger LOGGER = Logger.getLogger(FtpOutboundChannelAdapterSample.class);

	private final File baseFolder = new File("target" + File.separator + "toSend");


	public void runDemo() throws Exception{

		ConfigurableApplicationContext ctx =
			new ClassPathXmlApplicationContext("FtpOutboundChannelAdapterSample-context.xml");

		MessageChannel ftpChannel = ctx.getBean("ftpChannel", MessageChannel.class);

		baseFolder.mkdirs();

		final File fileToSendA = new File(baseFolder, "a.txt");
		final File fileToSendB = new File(baseFolder, "b.txt");

		final InputStream inputStreamA = FtpOutboundChannelAdapterSample.class.getResourceAsStream("/test-files/a.txt");
		final InputStream inputStreamB = FtpOutboundChannelAdapterSample.class.getResourceAsStream("/test-files/b.txt");

		FileUtils.copyInputStreamToFile(inputStreamA, fileToSendA);
		FileUtils.copyInputStreamToFile(inputStreamB, fileToSendB);

		
		final Message<File> messageA = MessageBuilder.withPayload(fileToSendA).build();
		final Message<File> messageB = MessageBuilder.withPayload(fileToSendB).build();

		ftpChannel.send(messageA);
		ftpChannel.send(messageB);

		Thread.sleep(2000);

		
		
	}

	
	public void cleanup() {
		FileUtils.deleteQuietly(baseFolder);
	}

}
